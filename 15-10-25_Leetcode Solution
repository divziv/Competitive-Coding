Problem Link:
https://leetcode.com/problems/adjacent-increasing-subarrays-detection-ii/?envType=daily-question&envId=2025-10-15

Solution:
class Solution {
public:
    int maxIncreasingSubarrays(vector<int>& nums) {
        int n = nums.size();
        vector<int> vl(n, 1), vr(n, 1);
        
        for(int i = 1; i < n; ++i) 
        {
            if(nums[i] > nums[i - 1])
                vl[i] = vl[i - 1] + 1;
        }

        for(int i = n - 2; i >= 0; --i) 
        {
            if(nums[i] < nums[i + 1])
                vr[i] = vr[i + 1] + 1;
        }

        int l = 1, h = n / 2;
        int s = 0;

        while(l <= h) 
        {
            int k = (l + h) / 2;
            bool f = false;

            for(int i = 0; i + 2 * k <= n; ++i) 
            {
                if(vl[i + k - 1] >= k && vr[i + k] >= k) 
                {
                    f = true;
                    break;
                }
            }

            if(f) 
            {
                s = k;
                l = k + 1;
            } 
            else 
            {
                h = k - 1;
            }
        }

        return s;
    }
};
